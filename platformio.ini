; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = esp32dev

[env]
framework = arduino

monitor_speed = 1500000
upload_speed = 1500000

; monitor_port = socket://bme280-env-sensor.local:23
; upload_port = bme280-env-sensor.local
; upload_protocol = espota

monitor_filters =
    default
    colorize
    time

board_build.filesystem = littlefs

build_flags = 
    -D PROJECT_NAME='"BME280 Sensor Publisher"'
    -D HOSTNAME='"bme280-env-sensor"'
    -D ELEGANTOTA_USE_ASYNC_WEBSERVER=1
    -D BS_USE_TELNETSPY
    -D BME280_LOG_LEVEL_BASIC
    ; -D BME280_LOG_LEVEL_FULL

lib_deps =
    synman/ESP-Bootstrap@>=1.0.0
    https://github.com/adafruit/Adafruit_BME280_Library.git@>=2.2.2
    https://github.com/knolleary/pubsubclient.git@^2.8
    https://github.com/shedokan/arduino-home-assistant.git#93787b2dd1e7c025cc62dd38b3413bb055e32a5d

[env:d1_mini]
platform = espressif8266@4.2.1
board = d1_mini

monitor_filters =
    esp8266_exception_decoder
    ${env.monitor_filters}

; board_build.ldscript = eagle.flash.4m3m.ld

lib_deps = 
    ${env.lib_deps}

;Build flags must include alternative to ESP32, included libraries expect a flag of ESP32 or ESP8266, a null flag will
;not work with an ESP8266.

build_flags = 
    -D ESP8266
    ${env_build_flags}

[env:esp32dev]
platform = espressif32@6.4.0
board = esp32dev

monitor_filters =
    esp32_exception_decoder
    ${env.monitor_filters}

; board_build.partitions = littlefs_4m3m.ld

build_flags = 
    -D esp32
    ${env.build_flags}

lib_deps = 
    bblanchon/ArduinoJson@^6.21.3
    ${env.lib_deps}